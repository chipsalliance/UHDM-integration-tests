/* Generated by Yosys 0.30+16 (git sha1 8b2a00102, gcc 11.3.0-1ubuntu1~22.04.1 -fPIC -Os) */

module bsg_round_robin_fifo_to_fifo(clk, reset, valid_i, data_i, yumi_o, in_top_channel_i, out_top_channel_i, valid_o, data_o, ready_i);
  wire [15:0] \bm2Da.i ;
  wire [15:0] \bm2Da.o ;
  wire \brrf2fm.and_scan.o ;
  wire \brrf2fm.and_scan.t ;
  wire \brrf2fm.genblk1.genblk1.thermo.i ;
  wire \brrf2fm.genblk1.genblk1.thermo.o ;
  wire \brrf2fm.go_channels_int ;
  wire \brrf2fm.go_channels_o ;
  wire \brrf2fm.go_cnt_o ;
  input clk;
  wire clk;
  wire [15:0] \data_head[0] ;
  wire [15:0] \data_head[1] ;
  input [31:0] data_i;
  wire [31:0] data_i;
  wire [15:0] \data_int_o[0] ;
  output [15:0] data_o;
  wire [15:0] data_o;
  wire [15:0] data_o_flat;
  wire go_channels;
  wire go_cnt;
  wire [15:0] \ic[1].in_chan.bsg_rr_ff_in.bm2Da.i ;
  wire [15:0] \ic[1].in_chan.bsg_rr_ff_in.bm2Da.o ;
  wire \ic[1].in_chan.bsg_rr_ff_in.c_ptr.add_i ;
  wire \ic[1].in_chan.bsg_rr_ff_in.c_ptr.clk ;
  wire \ic[1].in_chan.bsg_rr_ff_in.c_ptr.o ;
  wire \ic[1].in_chan.bsg_rr_ff_in.c_ptr.ptr_r ;
  wire \ic[1].in_chan.bsg_rr_ff_in.c_ptr_data.add_i ;
  wire \ic[1].in_chan.bsg_rr_ff_in.c_ptr_data.clk ;
  wire \ic[1].in_chan.bsg_rr_ff_in.c_ptr_data.o ;
  wire \ic[1].in_chan.bsg_rr_ff_in.c_ptr_data.ptr_r ;
  wire \ic[1].in_chan.bsg_rr_ff_in.clk ;
  wire [15:0] \ic[1].in_chan.bsg_rr_ff_in.data_head_o ;
  wire [15:0] \ic[1].in_chan.bsg_rr_ff_in.data_head_o_flat ;
  wire [63:0] \ic[1].in_chan.bsg_rr_ff_in.data_head_o_flat_pretrunc ;
  wire [31:0] \ic[1].in_chan.bsg_rr_ff_in.data_i ;
  wire [31:0] \ic[1].in_chan.bsg_rr_ff_in.data_i_flat ;
  wire \ic[1].in_chan.bsg_rr_ff_in.go_channels_i ;
  wire \ic[1].in_chan.bsg_rr_ff_in.go_cnt_i ;
  wire \ic[1].in_chan.bsg_rr_ff_in.iptr_r ;
  wire \ic[1].in_chan.bsg_rr_ff_in.iptr_r_data ;
  wire [1:0] \ic[1].in_chan.bsg_rr_ff_in.valid_i ;
  wire [1:0] \ic[1].in_chan.bsg_rr_ff_in.valid_rr.data_i ;
  wire \ic[1].in_chan.bsg_rr_ff_in.valid_rr.rot_i ;
  wire [3:0] \ic[1].in_chan.bsg_rr_ff_in.yumi_intermediate ;
  wire [1:0] \ic[1].in_chan.bsg_rr_ff_in.yumi_o ;
  wire [15:0] \ic[1].in_chan.data_head_tmp ;
  input in_top_channel_i;
  wire in_top_channel_i;
  wire [15:0] \oc[0].out_chan.bm2Da.i ;
  wire [15:0] \oc[0].out_chan.bm2Da.o ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr.add_i ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr.clk ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr.genblk1.ignore ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr.n_o ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr.o ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr.ptr_n ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr.ptr_r ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.add_i ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.clk ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.genblk1.ignore ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.n_o ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.o ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.ptr_n ;
  wire \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.ptr_r ;
  wire \oc[0].out_chan.bsg_rr_ff_out.clk ;
  wire [15:0] \oc[0].out_chan.bsg_rr_ff_out.data_head_double[0] ;
  wire [15:0] \oc[0].out_chan.bsg_rr_ff_out.data_head_double[1] ;
  wire [15:0] \oc[0].out_chan.bsg_rr_ff_out.data_head_i ;
  wire [15:0] \oc[0].out_chan.bsg_rr_ff_out.data_o ;
  wire \oc[0].out_chan.bsg_rr_ff_out.go_channels_i ;
  wire \oc[0].out_chan.bsg_rr_ff_out.go_cnt_i ;
  wire \oc[0].out_chan.bsg_rr_ff_out.optr_r ;
  wire \oc[0].out_chan.bsg_rr_ff_out.optr_r_data ;
  wire \oc[0].out_chan.bsg_rr_ff_out.ready_i ;
  wire \oc[0].out_chan.bsg_rr_ff_out.ready_rr.data_i ;
  wire \oc[0].out_chan.bsg_rr_ff_out.ready_rr.rot_i ;
  wire \oc[0].out_chan.bsg_rr_ff_out.valid_o ;
  wire [1:0] \oc[0].out_chan.bsg_rr_ff_out.valid_pretr ;
  wire [15:0] \oc[0].out_chan.data_head_array ;
  wire [15:0] \oc[0].out_chan.data_o_array ;
  input out_top_channel_i;
  wire out_top_channel_i;
  input ready_i;
  wire ready_i;
  input reset;
  wire reset;
  input [1:0] valid_i;
  wire [1:0] valid_i;
  wire \valid_int_o[0] ;
  output valid_o;
  wire valid_o;
  wire [1:0] \yumi_int_o[0] ;
  wire [1:0] \yumi_int_o[1] ;
  output [1:0] yumi_o;
  wire [1:0] yumi_o;
  wire [255:0] zero_flat;
  assign \bm2Da.i  = data_i[15:0];
  assign \bm2Da.o  = data_i[15:0];
  assign \brrf2fm.and_scan.o  = 1'hx;
  assign \brrf2fm.and_scan.t  = 1'hx;
  assign \brrf2fm.genblk1.genblk1.thermo.i  = 1'hx;
  assign \brrf2fm.genblk1.genblk1.thermo.o  = 1'hx;
  assign \brrf2fm.go_channels_int  = 1'hx;
  assign \brrf2fm.go_channels_o  = 1'hx;
  assign \brrf2fm.go_cnt_o  = 1'hx;
  assign \data_head[0]  = 16'hxxxx;
  assign \data_head[1]  = data_i[15:0];
  assign \data_int_o[0]  = data_i[15:0];
  assign data_o = data_i[15:0];
  assign data_o_flat = data_i[15:0];
  assign go_channels = 1'hx;
  assign go_cnt = 1'hx;
  assign \ic[1].in_chan.bsg_rr_ff_in.bm2Da.i  = data_i[15:0];
  assign \ic[1].in_chan.bsg_rr_ff_in.bm2Da.o  = data_i[15:0];
  assign \ic[1].in_chan.bsg_rr_ff_in.c_ptr.add_i  = 1'hx;
  assign \ic[1].in_chan.bsg_rr_ff_in.c_ptr.clk  = clk;
  assign \ic[1].in_chan.bsg_rr_ff_in.c_ptr.o  = 1'h0;
  assign \ic[1].in_chan.bsg_rr_ff_in.c_ptr.ptr_r  = 1'h0;
  assign \ic[1].in_chan.bsg_rr_ff_in.c_ptr_data.add_i  = 1'hx;
  assign \ic[1].in_chan.bsg_rr_ff_in.c_ptr_data.clk  = clk;
  assign \ic[1].in_chan.bsg_rr_ff_in.c_ptr_data.o  = 1'h0;
  assign \ic[1].in_chan.bsg_rr_ff_in.c_ptr_data.ptr_r  = 1'h0;
  assign \ic[1].in_chan.bsg_rr_ff_in.clk  = clk;
  assign \ic[1].in_chan.bsg_rr_ff_in.data_head_o  = data_i[15:0];
  assign \ic[1].in_chan.bsg_rr_ff_in.data_head_o_flat  = data_i[15:0];
  assign \ic[1].in_chan.bsg_rr_ff_in.data_head_o_flat_pretrunc  = { 48'hxxxxxxxxxxxx, data_i[15:0] };
  assign \ic[1].in_chan.bsg_rr_ff_in.data_i  = data_i;
  assign \ic[1].in_chan.bsg_rr_ff_in.data_i_flat  = data_i;
  assign \ic[1].in_chan.bsg_rr_ff_in.go_channels_i  = 1'hx;
  assign \ic[1].in_chan.bsg_rr_ff_in.go_cnt_i  = 1'hx;
  assign \ic[1].in_chan.bsg_rr_ff_in.iptr_r  = 1'h0;
  assign \ic[1].in_chan.bsg_rr_ff_in.iptr_r_data  = 1'h0;
  assign \ic[1].in_chan.bsg_rr_ff_in.valid_i  = valid_i;
  assign \ic[1].in_chan.bsg_rr_ff_in.valid_rr.data_i  = valid_i;
  assign \ic[1].in_chan.bsg_rr_ff_in.valid_rr.rot_i  = 1'h0;
  assign \ic[1].in_chan.bsg_rr_ff_in.yumi_intermediate  = 4'b00xx;
  assign \ic[1].in_chan.bsg_rr_ff_in.yumi_o  = 2'h0;
  assign \ic[1].in_chan.data_head_tmp  = data_i[15:0];
  assign \oc[0].out_chan.bm2Da.i  = data_i[15:0];
  assign \oc[0].out_chan.bm2Da.o  = data_i[15:0];
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr.add_i  = 1'hx;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr.clk  = clk;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr.genblk1.ignore  = 1'hx;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr.n_o  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr.o  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr.ptr_n  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr.ptr_r  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.add_i  = 1'hx;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.clk  = clk;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.genblk1.ignore  = 1'hx;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.n_o  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.o  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.ptr_n  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.c_ptr_data.ptr_r  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.clk  = clk;
  assign \oc[0].out_chan.bsg_rr_ff_out.data_head_double[0]  = data_i[15:0];
  assign \oc[0].out_chan.bsg_rr_ff_out.data_head_double[1]  = data_i[15:0];
  assign \oc[0].out_chan.bsg_rr_ff_out.data_head_i  = data_i[15:0];
  assign \oc[0].out_chan.bsg_rr_ff_out.data_o  = data_i[15:0];
  assign \oc[0].out_chan.bsg_rr_ff_out.go_channels_i  = 1'hx;
  assign \oc[0].out_chan.bsg_rr_ff_out.go_cnt_i  = 1'hx;
  assign \oc[0].out_chan.bsg_rr_ff_out.optr_r  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.optr_r_data  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.ready_i  = ready_i;
  assign \oc[0].out_chan.bsg_rr_ff_out.ready_rr.data_i  = ready_i;
  assign \oc[0].out_chan.bsg_rr_ff_out.ready_rr.rot_i  = 1'h0;
  assign \oc[0].out_chan.bsg_rr_ff_out.valid_o  = 1'hx;
  assign \oc[0].out_chan.bsg_rr_ff_out.valid_pretr  = 2'hx;
  assign \oc[0].out_chan.data_head_array  = data_i[15:0];
  assign \oc[0].out_chan.data_o_array  = data_i[15:0];
  assign \valid_int_o[0]  = 1'hx;
  assign valid_o = 1'hx;
  assign \yumi_int_o[0]  = 2'hx;
  assign \yumi_int_o[1]  = 2'h0;
  assign yumi_o = 2'h0;
  assign zero_flat = 256'h0000000000000000000000000000000000000000000000000000000000000000;
endmodule
