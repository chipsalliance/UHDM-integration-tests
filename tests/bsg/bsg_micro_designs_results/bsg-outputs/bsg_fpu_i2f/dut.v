/* Generated by Yosys 0.30+16 (git sha1 8b2a00102, gcc 11.3.0-1ubuntu1~22.04.1 -fPIC -Os) */

module bsg_fpu_i2f(clk_i, reset_i, en_i, v_i, signed_i, a_i, ready_o, v_o, z_o, yumi_i);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  input [15:0] a_i;
  wire [15:0] a_i;
  wire [15:0] abs;
  wire [15:0] \abs0.a_i ;
  wire [15:0] \abs0.o ;
  wire all_zero;
  reg all_zero_1_r;
  wire [15:0] chosen_abs;
  input clk_i;
  wire clk_i;
  wire [15:0] \clz.i ;
  wire [3:0] \clz.num_zero_o ;
  wire [15:0] \clz.pe0.a.i ;
  wire [15:0] \clz.pe0.a.nw1.scan.i ;
  wire [15:0] \clz.pe0.a.nw1.scan.o ;
  wire [15:0] \clz.pe0.a.nw1.scan.scanN.row[0].fill ;
  wire [15:0] \clz.pe0.a.nw1.scan.scanN.row[0].shifted ;
  wire [15:0] \clz.pe0.a.nw1.scan.scanN.row[1].fill ;
  wire [15:0] \clz.pe0.a.nw1.scan.scanN.row[1].shifted ;
  wire [15:0] \clz.pe0.a.nw1.scan.scanN.row[2].fill ;
  wire [15:0] \clz.pe0.a.nw1.scan.scanN.row[2].shifted ;
  wire [15:0] \clz.pe0.a.nw1.scan.scanN.row[3].fill ;
  wire [15:0] \clz.pe0.a.nw1.scan.scanN.row[3].shifted ;
  wire [79:0] \clz.pe0.a.nw1.scan.t ;
  wire [15:0] \clz.pe0.a.o ;
  wire [15:0] \clz.pe0.a.scan_lo ;
  wire \clz.pe0.a.v_o ;
  wire [3:0] \clz.pe0.addr_o ;
  wire [79:0] \clz.pe0.b.addr ;
  wire [3:0] \clz.pe0.b.addr_o ;
  wire [15:0] \clz.pe0.b.i ;
  wire [1:0] \clz.pe0.b.rof[1].rof1[0].vs ;
  wire [1:0] \clz.pe0.b.rof[1].rof1[1].vs ;
  wire [1:0] \clz.pe0.b.rof[1].rof1[2].vs ;
  wire [1:0] \clz.pe0.b.rof[1].rof1[3].vs ;
  wire [1:0] \clz.pe0.b.rof[1].rof1[4].vs ;
  wire [1:0] \clz.pe0.b.rof[1].rof1[5].vs ;
  wire [1:0] \clz.pe0.b.rof[1].rof1[6].vs ;
  wire [1:0] \clz.pe0.b.rof[1].rof1[7].vs ;
  wire [1:0] \clz.pe0.b.rof[2].rof1[0].vs ;
  wire [1:0] \clz.pe0.b.rof[2].rof1[1].vs ;
  wire [1:0] \clz.pe0.b.rof[2].rof1[2].vs ;
  wire [1:0] \clz.pe0.b.rof[2].rof1[3].vs ;
  wire [1:0] \clz.pe0.b.rof[3].rof1[0].vs ;
  wire [1:0] \clz.pe0.b.rof[3].rof1[1].vs ;
  wire [1:0] \clz.pe0.b.rof[4].rof1[0].vs ;
  wire [79:0] \clz.pe0.b.v ;
  wire \clz.pe0.b.v_o ;
  wire [15:0] \clz.pe0.enc_lo ;
  wire [15:0] \clz.pe0.i ;
  wire \clz.pe0.v_o ;
  wire [15:0] \clz.reversed ;
  input en_i;
  wire en_i;
  wire [4:0] exp;
  wire [9:0] mantissa;
  output ready_o;
  wire ready_o;
  input reset_i;
  wire reset_i;
  wire round_bit;
  wire round_up;
  wire [14:0] rounded;
  wire [3:0] shamt;
  wire [3:0] shamt_1_r;
  wire [14:0] shifted;
  reg sign_1_r;
  input signed_i;
  wire signed_i;
  wire sticky;
  reg v_1_r;
  input v_i;
  wire v_i;
  output v_o;
  wire v_o;
  input yumi_i;
  wire yumi_i;
  output [15:0] z_o;
  wire [15:0] z_o;
  assign _018_ = v_1_r & ~(yumi_i);
  assign ready_o = en_i & ~(_018_);
  assign _019_ = ready_o & v_i;
  assign _000_ = _019_ & ~(reset_i);
  assign z_o[14] = ~all_zero_1_r;
  assign z_o[15] = sign_1_r & ~(all_zero_1_r);
  assign _020_ = ~(a_i[1] | a_i[0]);
  assign _021_ = a_i[1] | a_i[0];
  assign _022_ = _021_ ^ a_i[2];
  assign _023_ = a_i[15] ? _022_ : a_i[2];
  assign _024_ = signed_i ? _023_ : a_i[2];
  assign _025_ = _021_ | a_i[2];
  assign _026_ = _025_ ^ a_i[3];
  assign _027_ = a_i[15] ? _026_ : a_i[3];
  assign _028_ = signed_i ? _027_ : a_i[3];
  assign _029_ = _028_ | _024_;
  assign _030_ = _020_ & ~(_029_);
  assign _031_ = a_i[3] | a_i[2];
  assign _032_ = _031_ | _021_;
  assign _033_ = _032_ ^ a_i[4];
  assign _034_ = a_i[15] ? _033_ : a_i[4];
  assign _035_ = signed_i ? _034_ : a_i[4];
  assign _036_ = _032_ | a_i[4];
  assign _037_ = _036_ ^ a_i[5];
  assign _038_ = a_i[15] ? _037_ : a_i[5];
  assign _039_ = signed_i ? _038_ : a_i[5];
  assign _040_ = _039_ | _035_;
  assign _041_ = a_i[5] | a_i[4];
  assign _042_ = _041_ | _032_;
  assign _043_ = _042_ ^ a_i[6];
  assign _044_ = a_i[15] ? _043_ : a_i[6];
  assign _045_ = signed_i ? _044_ : a_i[6];
  assign _046_ = _042_ | a_i[6];
  assign _047_ = _046_ ^ a_i[7];
  assign _048_ = a_i[15] ? _047_ : a_i[7];
  assign _049_ = signed_i ? _048_ : a_i[7];
  assign _050_ = _049_ | _045_;
  assign _051_ = _050_ | _040_;
  assign _052_ = _030_ & ~(_051_);
  assign _053_ = a_i[7] | a_i[6];
  assign _054_ = _053_ | _041_;
  assign _055_ = _054_ | _032_;
  assign _056_ = _055_ ^ a_i[8];
  assign _057_ = a_i[15] ? _056_ : a_i[8];
  assign _058_ = signed_i ? _057_ : a_i[8];
  assign _059_ = _055_ | a_i[8];
  assign _060_ = _059_ ^ a_i[9];
  assign _061_ = a_i[15] ? _060_ : a_i[9];
  assign _062_ = signed_i ? _061_ : a_i[9];
  assign _063_ = _062_ | _058_;
  assign _064_ = a_i[9] | a_i[8];
  assign _065_ = _064_ | _055_;
  assign _066_ = _065_ ^ a_i[10];
  assign _067_ = a_i[15] ? _066_ : a_i[10];
  assign _068_ = signed_i ? _067_ : a_i[10];
  assign _069_ = _065_ | a_i[10];
  assign _070_ = _069_ ^ a_i[11];
  assign _071_ = a_i[15] ? _070_ : a_i[11];
  assign _072_ = signed_i ? _071_ : a_i[11];
  assign _073_ = _072_ | _068_;
  assign _074_ = _073_ | _063_;
  assign _075_ = a_i[11] | a_i[10];
  assign _076_ = _075_ | _064_;
  assign _077_ = _076_ | _055_;
  assign _078_ = _077_ ^ a_i[12];
  assign _079_ = a_i[15] ? _078_ : a_i[12];
  assign _001_ = signed_i ? _079_ : a_i[12];
  assign _002_ = _077_ | a_i[12];
  assign _003_ = _002_ ^ a_i[13];
  assign _004_ = a_i[15] ? _003_ : a_i[13];
  assign _005_ = signed_i ? _004_ : a_i[13];
  assign _006_ = _005_ | _001_;
  assign _007_ = a_i[13] | a_i[12];
  assign _008_ = _007_ | _077_;
  assign _009_ = _008_ ^ a_i[14];
  assign _010_ = a_i[15] ? _009_ : a_i[14];
  assign _011_ = signed_i ? _010_ : a_i[14];
  assign _012_ = _008_ | a_i[14];
  assign _013_ = a_i[15] & ~(_012_);
  assign _014_ = signed_i ? _013_ : a_i[15];
  assign _015_ = _014_ | _011_;
  assign _016_ = _015_ | _006_;
  assign _017_ = _016_ | _074_;
  assign all_zero = _052_ & ~(_017_);
  always @(posedge clk_i)
    if (reset_i) v_1_r <= 1'h0;
    else if (ready_o) v_1_r <= v_i;
  always @(posedge clk_i)
    if (_000_) all_zero_1_r <= all_zero;
  always @(posedge clk_i)
    if (_000_)
      if (!signed_i) sign_1_r <= 1'h0;
      else sign_1_r <= a_i[15];
  assign abs = { \abs0.o [15:1], a_i[0] };
  assign \abs0.a_i  = a_i;
  assign \abs0.o [0] = a_i[0];
  assign chosen_abs = { \clz.i [15:1], a_i[0] };
  assign \clz.i [0] = a_i[0];
  assign \clz.num_zero_o  = 4'hx;
  assign \clz.pe0.a.i  = { a_i[0], \clz.i [1], \clz.i [2], \clz.i [3], \clz.i [4], \clz.i [5], \clz.i [6], \clz.i [7], \clz.i [8], \clz.i [9], \clz.i [10], \clz.i [11], \clz.i [12], \clz.i [13], \clz.i [14], \clz.i [15] };
  assign \clz.pe0.a.nw1.scan.i  = { a_i[0], \clz.i [1], \clz.i [2], \clz.i [3], \clz.i [4], \clz.i [5], \clz.i [6], \clz.i [7], \clz.i [8], \clz.i [9], \clz.i [10], \clz.i [11], \clz.i [12], \clz.i [13], \clz.i [14], \clz.i [15] };
  assign \clz.pe0.a.nw1.scan.o  = 16'bx000000000000000;
  assign \clz.pe0.a.nw1.scan.scanN.row[0].fill  = 16'h0000;
  assign \clz.pe0.a.nw1.scan.scanN.row[0].shifted  = 16'h0000;
  assign \clz.pe0.a.nw1.scan.scanN.row[1].fill  = 16'h0000;
  assign \clz.pe0.a.nw1.scan.scanN.row[1].shifted  = 16'h0000;
  assign \clz.pe0.a.nw1.scan.scanN.row[2].fill  = 16'h0000;
  assign \clz.pe0.a.nw1.scan.scanN.row[2].shifted  = 16'h0000;
  assign \clz.pe0.a.nw1.scan.scanN.row[3].fill  = 16'h0000;
  assign \clz.pe0.a.nw1.scan.scanN.row[3].shifted  = 16'h0000;
  assign \clz.pe0.a.nw1.scan.t  = 80'b000000000000000x000000000000000x000000000000000x000000000000000x000000000000000x;
  assign \clz.pe0.a.o  = 16'bx000000000000000;
  assign \clz.pe0.a.scan_lo  = 16'bx000000000000000;
  assign \clz.pe0.a.v_o  = 1'hx;
  assign \clz.pe0.addr_o  = 4'hx;
  assign \clz.pe0.b.addr  = 80'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000xxxxxx00xx00xx00xxx0x0x0x0x0x0x00000000000000000;
  assign \clz.pe0.b.addr_o  = 4'hx;
  assign \clz.pe0.b.i  = 16'bx000000000000000;
  assign \clz.pe0.b.rof[1].rof1[0].vs  = 2'h0;
  assign \clz.pe0.b.rof[1].rof1[1].vs  = 2'h0;
  assign \clz.pe0.b.rof[1].rof1[2].vs  = 2'h0;
  assign \clz.pe0.b.rof[1].rof1[3].vs  = 2'h0;
  assign \clz.pe0.b.rof[1].rof1[4].vs  = 2'h0;
  assign \clz.pe0.b.rof[1].rof1[5].vs  = 2'h0;
  assign \clz.pe0.b.rof[1].rof1[6].vs  = 2'h0;
  assign \clz.pe0.b.rof[1].rof1[7].vs  = 2'bx0;
  assign \clz.pe0.b.rof[2].rof1[0].vs  = 2'h0;
  assign \clz.pe0.b.rof[2].rof1[1].vs  = 2'h0;
  assign \clz.pe0.b.rof[2].rof1[2].vs  = 2'h0;
  assign \clz.pe0.b.rof[2].rof1[3].vs  = 2'bx0;
  assign \clz.pe0.b.rof[3].rof1[0].vs  = 2'h0;
  assign \clz.pe0.b.rof[3].rof1[1].vs  = 2'bx0;
  assign \clz.pe0.b.rof[4].rof1[0].vs  = 2'bx0;
  assign \clz.pe0.b.v  = 80'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0xxxxxxx0xxx0xxx0xxx0x0x0x0x0x0x0x000000000000000;
  assign \clz.pe0.b.v_o  = 1'hx;
  assign \clz.pe0.enc_lo  = 16'bx000000000000000;
  assign \clz.pe0.i  = { a_i[0], \clz.i [1], \clz.i [2], \clz.i [3], \clz.i [4], \clz.i [5], \clz.i [6], \clz.i [7], \clz.i [8], \clz.i [9], \clz.i [10], \clz.i [11], \clz.i [12], \clz.i [13], \clz.i [14], \clz.i [15] };
  assign \clz.pe0.v_o  = 1'hx;
  assign \clz.reversed  = { a_i[0], \clz.i [1], \clz.i [2], \clz.i [3], \clz.i [4], \clz.i [5], \clz.i [6], \clz.i [7], \clz.i [8], \clz.i [9], \clz.i [10], \clz.i [11], \clz.i [12], \clz.i [13], \clz.i [14], \clz.i [15] };
  assign exp = 5'h1e;
  assign mantissa = 10'hxxx;
  assign round_bit = 1'hx;
  assign round_up = 1'hx;
  assign rounded = 15'b11110xxxxxxxxxx;
  assign shamt = 4'hx;
  assign shamt_1_r = 4'hx;
  assign shifted = 15'hxxxx;
  assign sticky = 1'hx;
  assign v_o = v_1_r;
  assign z_o[13:0] = { z_o[14], z_o[14], z_o[14], 11'h000 };
endmodule
